<?xml version="1.0" encoding="utf-8"?>

<!--

How to use:

Root node must be <locale> with an attribute language="X", where X is the
language code for which this strings file is. You can have multiple files for a
single language, their contents will be merged when processed.

Child nodes can be either <section> or <string> nodes :

- <string> nodes associate a unique key (attribute "key") with a printable text
  string in desired language.
- <section> nodes contain string nodes (or other section nodes) to which they
  prepend a fixed key prefix (attribute "prefix").

Text strings can contain literal text and references to variables and modifiers
resolved at runtime. To read the value of a variable use the {varname} syntax,
dots are also allowed to access fields or dictionary keys: {user.login}.

Modifiers can be used to produce an output from one or more string inputs.
Syntax is {name:a1,a2,a3} where 'name' is modifier name and 'aN' are modifier
arguments. Example: '{sum:1,2}' would return '3' if modifier 'sum' computed the
sum of its arguments.

Variable values or result of modifiers can be used as arguments to other
modifiers: {if:{a},{if:{b},{c}}}

-->

<locale language="fr">	
	<section prefix="error.">
		<string key="modifier">Invalid {modifier:1} found</string>
	</section>

	<section prefix="alias.">
		<string key="01" alias="test.01" />
	</section>

	<section prefix="test.">
		<string key="01">Bonjour sire ! Il fait beau, mais frais, mais beau !</string>
		<string key="02">Vous avez {count} nouveau(x) message(s)</string>
		<string key="03">Modifier le compte '{account.name}'</string>
		<string key="04">Nous sommes le {date:{today},d/m/y}</string>
		<string key="05">Vous avez {count} {if:{gt:{count},1},nouveaux messages,nouveau message}, avec accord s'il vous plait !</string>
		<string key="06">{a} cochon{if:{gt:{a},1},s}, {b} poule{if:{gt:{b},1},s}, accordé{if:{gt:{add:{a},{b}},1},s} également</string>
		<string key="07">Nombre de visites: {pad:{count},-8,0} (mais on prévoit 8 caractères, au cas où)</string>
		<string key="08">{pad:À gauche,20,#}, des canapés !</string>
		<string key="09">{pad:À droite,-20,#}, des canapés !</string>
		<string key="10">La réponse est {x.y.z}</string>
	</section>

	<section prefix="alias.">
		<string key="02" alias="test.02" />
	</section>

	<section prefix="modifier.">
		<string key="add.01">{add:{lhs},{rhs}}</string>
		<string key="case.01">{case:{value},1,Un,2,Deux}</string>
		<string key="case.02">{case:{value},1,Un,2,Deux,Autre}</string>
		<string key="def.01">{def:{value},default}</string>
		<string key="def.02">{def:{v1},{v2},default}</string>
		<string key="div.01">{div:{lhs},{rhs}}</string>
		<string key="if.01">{if:{condition},Vrai,Faux}</string>
		<string key="ifset.01">{ifset:{condition},Vrai,Faux}</string>
		<string key="mod.01">{mod:{lhs},{rhs}}</string>
		<string key="mul.01">{mul:{lhs},{rhs}}</string>
		<string key="pad.01">{pad:{string},8,-}</string>
		<string key="pad.02">{pad:{string},-8,-}</string>
		<string key="sub.01">{sub:{lhs},{rhs}}</string>
	</section>
</locale>
